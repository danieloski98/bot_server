[{"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\reportWebVitals.js":"1","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\App.tsx":"2","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\navigation\\Authentication.tsx":"3","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Pages\\Home.tsx":"4","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\index.tsx":"5","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Messanger.tsx":"6","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Zoe.tsx":"7","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Home\\Form.tsx":"8","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Envelope.tsx":"9","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Pages\\ForgotPassword.tsx":"10","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Forgotpassword\\Form.tsx":"11","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\EmailIcon.tsx":"12","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Pages\\ResetPassword.tsx":"13","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\ResetPassword\\Form.tsx":"14","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Pages\\Dashboard.tsx":"15","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\navigation\\index.tsx":"16","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Greenlogo.tsx":"17","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\Navbar.tsx":"18","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\Sidebar.tsx":"19","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Services.tsx":"20","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Dashboard.tsx":"21","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Pages\\Dasboard.tsx":"22","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Pages\\Listings.tsx":"23","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Request.tsx":"24","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Settings.tsx":"25","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Location.tsx":"26","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Help.tsx":"27","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\ListingCard.tsx":"28","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\StatCard.tsx":"29","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Pages\\Request.tsx":"30","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Eye.tsx":"31","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\RequestCard.tsx":"32","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Lock.tsx":"33","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Business.tsx":"34","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Pages\\Settings.tsx":"35","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\ProfileSettings.tsx":"36","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\AcessSettings.tsx":"37","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\SecuritySettings.tsx":"38","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Pages\\States.tsx":"39","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Pages\\ZipCode.tsx":"40","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Pages\\ServiceType.tsx":"41","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\MemoryCard.tsx":"42","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Hooks\\useNetwork.tsx":"43","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\NetworkActivity.tsx":"44","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\globals\\Loader.tsx":"45","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Hooks\\useMakeRequest.tsx":"46","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Contexts\\AdminDetailsContext.tsx":"47","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Hooks\\useAdminDetails.tsx":"48","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\types\\Url.ts":"49","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\AddAdminModal.tsx":"50","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\AdminsTables.tsx":"51","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Functions\\GetListings.ts":"52","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\Modals\\DeclineModal.tsx":"53","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\Modals\\ApproveListing.tsx":"54","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\Modals\\AddListingModal.tsx":"55","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\Modals\\EditListing.tsx":"56"},{"size":362,"mtime":1607170071459,"results":"57","hashOfConfig":"58"},{"size":185,"mtime":1609184667487,"results":"59","hashOfConfig":"58"},{"size":715,"mtime":1608243286665,"results":"60","hashOfConfig":"58"},{"size":2019,"mtime":1608296856029,"results":"61","hashOfConfig":"58"},{"size":618,"mtime":1609793837234,"results":"62","hashOfConfig":"58"},{"size":814,"mtime":1608222963801,"results":"63","hashOfConfig":"58"},{"size":3984,"mtime":1608223263285,"results":"64","hashOfConfig":"58"},{"size":5913,"mtime":1610976122170,"results":"65","hashOfConfig":"58"},{"size":998,"mtime":1608986382751,"results":"66","hashOfConfig":"58"},{"size":2039,"mtime":1608239847845,"results":"67","hashOfConfig":"58"},{"size":2760,"mtime":1608297197461,"results":"68","hashOfConfig":"58"},{"size":1539,"mtime":1608240645670,"results":"69","hashOfConfig":"58"},{"size":1916,"mtime":1608241663401,"results":"70","hashOfConfig":"58"},{"size":2366,"mtime":1608297410002,"results":"71","hashOfConfig":"58"},{"size":4009,"mtime":1612167771360,"results":"72","hashOfConfig":"58"},{"size":815,"mtime":1609794098707,"results":"73","hashOfConfig":"58"},{"size":11885,"mtime":1608244049455,"results":"74","hashOfConfig":"58"},{"size":1757,"mtime":1609315737208,"results":"75","hashOfConfig":"58"},{"size":4234,"mtime":1612184704362,"results":"76","hashOfConfig":"58"},{"size":864,"mtime":1608285364940,"results":"77","hashOfConfig":"58"},{"size":1137,"mtime":1608286696635,"results":"78","hashOfConfig":"58"},{"size":1273,"mtime":1612173863672,"results":"79","hashOfConfig":"58"},{"size":3361,"mtime":1612189557893,"results":"80","hashOfConfig":"58"},{"size":1331,"mtime":1608286004387,"results":"81","hashOfConfig":"58"},{"size":983,"mtime":1608286464803,"results":"82","hashOfConfig":"58"},{"size":1089,"mtime":1608285540671,"results":"83","hashOfConfig":"58"},{"size":749,"mtime":1608288790470,"results":"84","hashOfConfig":"58"},{"size":3220,"mtime":1612189995006,"results":"85","hashOfConfig":"58"},{"size":906,"mtime":1608300179082,"results":"86","hashOfConfig":"58"},{"size":15671,"mtime":1612170914488,"results":"87","hashOfConfig":"58"},{"size":754,"mtime":1608986870057,"results":"88","hashOfConfig":"58"},{"size":7466,"mtime":1612170303138,"results":"89","hashOfConfig":"58"},{"size":812,"mtime":1608986795789,"results":"90","hashOfConfig":"58"},{"size":711,"mtime":1608285692074,"results":"91","hashOfConfig":"58"},{"size":1967,"mtime":1610972423385,"results":"92","hashOfConfig":"58"},{"size":4458,"mtime":1610973181252,"results":"93","hashOfConfig":"58"},{"size":1931,"mtime":1612174845737,"results":"94","hashOfConfig":"58"},{"size":4426,"mtime":1611771392762,"results":"95","hashOfConfig":"58"},{"size":2159,"mtime":1612174162182,"results":"96","hashOfConfig":"58"},{"size":2096,"mtime":1611822908559,"results":"97","hashOfConfig":"58"},{"size":2054,"mtime":1612174148901,"results":"98","hashOfConfig":"58"},{"size":919,"mtime":1611823033439,"results":"99","hashOfConfig":"58"},{"size":770,"mtime":1609314476861,"results":"100","hashOfConfig":"58"},{"size":1366,"mtime":1609232955423,"results":"101","hashOfConfig":"58"},{"size":860,"mtime":1609202918845,"results":"102","hashOfConfig":"58"},{"size":1613,"mtime":1609702569817,"results":"103","hashOfConfig":"58"},{"size":1024,"mtime":1609575085182,"results":"104","hashOfConfig":"58"},{"size":604,"mtime":1610971226325,"results":"105","hashOfConfig":"58"},{"size":106,"mtime":1612189106077,"results":"106","hashOfConfig":"58"},{"size":7137,"mtime":1611855239815,"results":"107","hashOfConfig":"58"},{"size":6134,"mtime":1612166439992,"results":"108","hashOfConfig":"58"},{"size":782,"mtime":1612173579932,"results":"109","hashOfConfig":"58"},{"size":2901,"mtime":1612170698315,"results":"110","hashOfConfig":"58"},{"size":2943,"mtime":1612170801254,"results":"111","hashOfConfig":"58"},{"size":11849,"mtime":1612187186430,"results":"112","hashOfConfig":"58"},{"size":11994,"mtime":1612189031700,"results":"113","hashOfConfig":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"1nsem7i",{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"119"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"119"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"169"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"119"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"132"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"119"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\reportWebVitals.js",[],["244","245"],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\App.tsx",[],["246","247"],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\navigation\\Authentication.tsx",[],["248","249"],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Pages\\Home.tsx",[],["250","251"],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\index.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Messanger.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Zoe.tsx",[],["252","253"],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Home\\Form.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Envelope.tsx",[],["254","255"],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Pages\\ForgotPassword.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Forgotpassword\\Form.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\EmailIcon.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Pages\\ResetPassword.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\ResetPassword\\Form.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Pages\\Dashboard.tsx",["256","257"],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\navigation\\index.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Greenlogo.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\Navbar.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\Sidebar.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Services.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Dashboard.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Pages\\Dasboard.tsx",["258"],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Pages\\Listings.tsx",["259","260"],"import { } from '@chakra-ui/react'\r\nimport React from 'react'\r\nimport ListingCard from '../Components/ListingCard'\r\nimport { Spinner } from '@chakra-ui/react'\r\nimport { IListing } from '../../../types/listings';\r\nimport { useQuery } from 'react-query';\r\nimport {  getApproved } from '../Functions/GetListings';\r\nimport Empty  from '../../../assets/icons/notfound.svg';\r\n\r\n\r\n\r\nexport default function Listings() {\r\n    const [requests, setRequests] = React.useState([] as IListing[]);\r\n    const [offset, setOffset] = React.useState(0);\r\n    const [remaining, setRemaining] = React.useState(0);\r\n    const [showModal, setShowModal] = React.useState(false);\r\n\r\n    const {isLoading, data} = useQuery(['Approvedlistings', offset],() => getApproved(offset));\r\n    console.log(data);\r\n\r\n\r\n    React.useEffect(() => {\r\n        // setTotalRequest(requests.length)\r\n        if (data !== undefined) {\r\n            setRequests(prev => [...prev, ...data.data.listings])\r\n            if (data.data.remaining > 0) {\r\n                setRemaining(data.data.remaining);\r\n            }else {\r\n                setRemaining(0);\r\n            }\r\n        }\r\n    }, [data, isLoading]);\r\n\r\n\r\n    const more = () => {\r\n        // totalRequest.current = requests.length;\r\n        if (remaining > 0) {\r\n            setOffset(prev => prev + 6);\r\n        }\r\n    }\r\n\r\n     // function\r\n     const closeModal = () => {\r\n        setShowModal(false);\r\n    }\r\n\r\n    return (\r\n        <div className=\"w-full h-auto flex flex-col bg-white px-5 pt-6 rounded pb-8\">\r\n            \r\n            <div className=\"w-full h-24 flex mt-5 mb-5\">\r\n\r\n                <div className=\"flex-1 flex flex-col\">\r\n                    <h1 className=\"font-Rubik-Bold text-xl font-bold\">Business Listings</h1>\r\n                    <p className=\"text-xs font-Rubik_Regular\">All the businesses registered and approved in Zoe's Memory</p>\r\n                </div>\r\n\r\n                \r\n            </div>\r\n\r\n            <div className=\" pb-10 flex-1\">\r\n                    {isLoading ?\r\n                        (<div className=\"w-full h-full flex justify-center items-centered\">\r\n                            <Spinner color=\"green.500\" size=\"lg\" />\r\n                        </div>)\r\n                        :\r\n                        (<div>\r\n                            {requests.length < 1 ?\r\n                                (<div className=\"w-full flex flex-col items-center pt-10\">\r\n                                    <img src={Empty} alt=\"empty\" width=\"250\" />\r\n                                    <h1 className=\"mt-5 font-Rubik-medium text-lg text-center\">No request found!</h1>\r\n                                </div>):\r\n                                (<div className=\"w-full grid grid-cols-3 gap-3\">\r\n                                    {requests.map((item, index) => (\r\n                                        <ListingCard item={item} key={index} />\r\n                                    ))}\r\n                                </div>)\r\n                            }\r\n                        </div>)\r\n                    }\r\n            </div>\r\n\r\n            <div className=\"w-full h-24 flex justify-center\">\r\n                {remaining > 0 && (<button onClick={more} className=\"h-10 rounded bg-green-400 px-3 text-xs text-white font-Rubik_Regular\">Load more</button>)}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Request.tsx",[],["261","262"],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Settings.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Location.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Help.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\ListingCard.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\StatCard.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Pages\\Request.tsx",["263"],"import React from 'react'\r\nimport { Spinner, Input, Modal, ModalContent, ModalOverlay, Select, InputGroup, InputLeftAddon  } from '@chakra-ui/react'\r\nimport RequestCard from '../../Dashboard/Components/RequestCard'\r\nimport { IListing } from '../../../types/listings';\r\nimport { useMutation, useQuery, useQueries } from 'react-query';\r\nimport { makeRequest } from '../Functions/GetListings';\r\nimport Empty  from '../../../assets/icons/notfound.svg';\r\nimport { FiX } from 'react-icons/fi';\r\nimport { IReturnType } from '../../../types/ReturnType';\r\nimport { URL } from '../../../types/Url'\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport * as axios from 'axios';\r\n\r\n// validation schema\r\nconst validationSchema = yup.object({\r\n    state: yup.string().required('This field is required'),\r\n    address: yup.string().required('This field is required'),\r\n    zip_code: yup.string().required('This field is required'),\r\n    service_type: yup.string().required('This field is required'),\r\n    email: yup.string().email('invalid email').required('This field is required'),\r\n    phone: yup.string().required('This field is required'),\r\n    website: yup.string(),\r\n    business_name: yup.string().required('This field is required'),\r\n\r\n})\r\n\r\n\r\n// add listing modal\r\nconst AddListingModal = (props: {showModal: boolean, closeModal: Function}) => {\r\n    const { showModal, closeModal } = props;\r\n    const [services, setServices] = React.useState([]);\r\n    const [states, setStates] = React.useState([]);\r\n    const [zipcodes, setZipcodes] = React.useState([]);\r\n\r\n    // formik\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            state: '',\r\n            address: '',\r\n            zip_code: '',\r\n            service_type: '',\r\n            email: '',\r\n            phone: '',\r\n            website: '',\r\n            business_name: '',\r\n        },\r\n        onSubmit: () => null,\r\n        validationSchema\r\n    });\r\n\r\n    const Mutation = useMutation(async(listing: any) => {\r\n        const request = await axios.default.post(`${URL}/listings/add`, listing, {headers: { 'content-type': 'application/json' }});\r\n        return  request.data as IReturnType;\r\n    })\r\n\r\n    const query = useQueries([\r\n        { queryKey: 'services', queryFn: async () => {\r\n                const request = await fetch(`${URL}/servicetype`);\r\n                const result = await request.json() as IReturnType;\r\n                if (!request.ok) {\r\n                    throw new Error('An error occured ');\r\n                }\r\n                return result;\r\n            }\r\n        },\r\n        {\r\n            queryKey: 'states', queryFn: async () => {\r\n                const request = await fetch(`${URL}/states`);\r\n                const result = await request.json() as IReturnType;\r\n                if (!request.ok) {\r\n                    throw new Error('An error occured ');\r\n                }\r\n                return result;\r\n            }\r\n        },\r\n        {\r\n            queryKey: 'zipcode', queryFn: async () => {\r\n                const request = await fetch(`${URL}/zipcode`);\r\n                const result = await request.json() as IReturnType;\r\n                if (!request.ok) {\r\n                    throw new Error('An error occured ');\r\n                }\r\n                return result;\r\n            }\r\n        },\r\n    ])\r\n\r\n    React.useEffect(() => {\r\n        \r\n        if (query[0].data !== undefined) {\r\n            setServices([ ...query[0].data['data']])\r\n        }\r\n        if (query[1].data !== undefined) {\r\n            setStates([...query[1].data['data']]);\r\n        }\r\n        if (query[2].data !== undefined) {\r\n            setZipcodes([...query[2].data['data']]);\r\n        }\r\n        \r\n    }, [query])\r\n\r\n    React.useEffect(() => {\r\n        if (Mutation.status === 'loading') {\r\n            return;\r\n        }\r\n        if (Mutation.status === 'error') {\r\n            clearFields();\r\n            alert(Mutation.error['response'].data.errorMessage);\r\n            Mutation.reset();\r\n        } else if (Mutation.status === 'success') {\r\n            clearFields();\r\n            alert(Mutation.data.successMessage);\r\n            Mutation.reset();\r\n        }\r\n    });\r\n\r\n    const submit = async() => {\r\n        if (!formik.dirty) {\r\n            alert(\"you have to flll the form to continue\");\r\n        } else if (!formik.isValid) {\r\n            alert(\"Please fill in the form correctly\")\r\n        } else {\r\n            Mutation.mutate(formik.values);\r\n        }\r\n    }\r\n\r\n    const clearFields = () => {\r\n        formik.resetForm();\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={showModal} closeOnEsc={false} closeOnOverlayClick={false} isCentered={true} size=\"xl\" motionPreset=\"scale\" onClose={() => closeModal()}>\r\n            <ModalOverlay />\r\n            <ModalContent className=\"p-6 rounded-md\">\r\n                <div className=\"w-full flex justify-end\"><FiX size={24} color=\"black\" onClick={() => closeModal()} /></div>\r\n                <h1 className=\"font-Rubik-Bold font-bold text-lg mt-4\">Create New Listing</h1>\r\n\r\n                <div className=\"mt-4 flex justify-between w-full\">\r\n                    <div className=\"flex flex-col flex-1 mr-3\">\r\n                        <p className=\"text-sm font-bold font-Rubik-Regular\">Business name</p>\r\n                        <Input type=\"text\" name=\"business_name\"  value={formik.values.business_name} onChange={formik.handleChange} \r\n                        onBlur={formik.handleBlur} onFocus={() => formik.setFieldTouched('business_name', true, true)} variant=\"filled\" className=\"mt-3\" />\r\n                        {formik.touched.business_name && formik.errors.business_name && (<p className=\"text-sm font-bold font-Rubik-Regular text-red-400\">{formik.errors.business_name}</p>)}\r\n                    </div>\r\n\r\n                    <div className=\"flex flex-col flex-1\">\r\n                        <p className=\"text-sm font-bold font-Rubik-Regular\">State</p>\r\n                        <Select variant=\"filled\"  placeholder=\"States\" className=\"mt-3\" name=\"state\"  value={formik.values.state} onChange={formik.handleChange} \r\n                        onBlur={formik.handleBlur} onFocus={() => formik.setFieldTouched('state', true, true)}>\r\n                            {\r\n                                states.map((item, index) => (\r\n                                    <option key={index} value={item['name']}>{item.name}</option>\r\n                                ))\r\n                            }\r\n                        </Select>\r\n                        {formik.touched.state && formik.errors.state && (<p className=\"text-sm font-bold font-Rubik-Regular text-red-400\">{formik.errors.state}</p>)}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"mt-4 flex justify-between w-full\">\r\n                    <div className=\"flex flex-col flex-1 mr-3\">\r\n                        <p className=\"text-sm font-bold font-Rubik-Regular\">Zipcode</p>\r\n\r\n                        <Input type=\"text\" name=\"zip_code\"  value={formik.values.zip_code} onChange={formik.handleChange} \r\n                        onBlur={formik.handleBlur} onFocus={() => formik.setFieldTouched('zip_code', true, true)} variant=\"filled\" className=\"mt-3\" />\r\n\r\n                        {formik.touched.zip_code && formik.errors.zip_code && (<p className=\"text-sm font-bold font-Rubik-Regular text-red-400\">{formik.errors.zip_code}</p>)}\r\n                    </div>\r\n\r\n                    <div className=\"flex flex-col flex-1\">\r\n                        <p className=\"text-sm font-bold font-Rubik-Regular\">Phone number</p>\r\n                        <Input type=\"text\" variant=\"filled\" className=\"mt-3\" name=\"phone\"  value={formik.values.phone} onChange={formik.handleChange} \r\n                        onBlur={formik.handleBlur} onFocus={() => formik.setFieldTouched('phone', true, true)} />\r\n                        {formik.touched.phone && formik.errors.phone && (<p className=\"text-sm font-bold font-Rubik-Regular text-red-400\">{formik.errors.phone}</p>)}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"mt-4 flex justify-between w-full\">\r\n                    <div className=\"flex flex-col flex-1 mr-3\">\r\n                        <p className=\"text-sm font-bold font-Rubik-Regular\">Email Address</p>\r\n                        <Input type=\"text\" variant=\"filled\" className=\"mt-3\" name=\"email\"  value={formik.values.email} onChange={formik.handleChange} \r\n                        onBlur={formik.handleBlur} onFocus={() => formik.setFieldTouched('email', true, true)}/>\r\n                        {formik.touched.email && formik.errors.email && (<p className=\"text-sm font-bold font-Rubik-Regular text-red-400\">{formik.errors.email}</p>)}\r\n                    </div>\r\n\r\n                    <div className=\"flex flex-col flex-1\">\r\n                        <p className=\"text-sm font-bold font-Rubik-Regular\">Website</p>\r\n                        <InputGroup className=\"mt-3\">\r\n                            <InputLeftAddon children={<p>www.</p>} />\r\n                            <Input type=\"text\" variant=\"filled\" className=\"mt-0\" name=\"website\"  value={formik.values.website} onChange={formik.handleChange} \r\n                            onBlur={formik.handleBlur} onFocus={() => formik.setFieldTouched('website', true, true)}/>\r\n                            </InputGroup>\r\n                        {formik.touched.website && formik.errors.website && (<p className=\"text-sm font-bold font-Rubik-Regular text-red-400\">{formik.errors.website}</p>)}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"mt-4 flex justify-between w-full\">\r\n                    <div className=\"flex flex-col flex-1 mr-3\">\r\n                        <p className=\"text-sm font-bold font-Rubik-Regular\">Service Type</p>\r\n                        <Select variant=\"filled\" placeholder=\"Service Type\" className=\"mt-3\" name=\"service_type\"  value={formik.values.service_type} onChange={formik.handleChange} \r\n                        onBlur={formik.handleBlur} onFocus={() => formik.setFieldTouched('service_type', true, true)}>\r\n                            {\r\n                                services.map((item, index) => (\r\n                                    <option key={index} value={item['name']}>{item.name}</option>\r\n                                ))\r\n                            }\r\n                        </Select>\r\n                        {formik.touched.service_type && formik.errors.service_type && (<p className=\"text-sm font-bold font-Rubik-Regular text-red-400\">{formik.errors.service_type}</p>)}\r\n                    </div>\r\n\r\n                    <div className=\"flex flex-col flex-1 mr-3\">\r\n                        <p className=\"text-sm font-bold font-Rubik-Regular\">Address</p>\r\n                        <Input type=\"text\" variant=\"filled\" className=\"mt-3\" name=\"address\"  value={formik.values.address} onChange={formik.handleChange} \r\n                        onBlur={formik.handleBlur} onFocus={() => formik.setFieldTouched('address', true, true)}/>\r\n                        {formik.touched.address && formik.errors.address && (<p className=\"text-sm font-bold font-Rubik-Regular text-red-400\">{formik.errors.address}</p>)}\r\n                    </div>\r\n\r\n                   \r\n                </div>\r\n\r\n                <div className=\"flex justify-end flex-1 mt-6\">\r\n                        <button onClick={submit} className=\"px-4 rounded bg-green-500 text-white w-24 text-xs h-10 mt-8\">\r\n                            {\r\n                                Mutation.status === 'loading' ?\r\n                                <Spinner color=\"white\" size='md' /> :\r\n                                'Submit'\r\n                            }\r\n                        </button>\r\n                </div>\r\n\r\n            </ModalContent>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport const IconsHolder = (props) => <div className=\"flex items-center h-full \">{props.children}</div>;\r\n\r\nexport default function Request() {\r\n    const [requests, setRequests] = React.useState([] as IListing[]);\r\n    const [offset, setOffset] = React.useState(0);\r\n    const [remaining, setRemaining] = React.useState(0);\r\n    const [showModal, setShowModal] = React.useState(false);\r\n\r\n    const {isLoading, data} = useQuery(['listings', offset],() => makeRequest(offset));\r\n    console.log(data);\r\n\r\n    React.useEffect(() => {\r\n        // setTotalRequest(requests.length)\r\n        if (data !== undefined) {\r\n            setRequests(prev => [...prev, ...data.data.listings])\r\n            if (data.data.remaining > 0) {\r\n                setRemaining(data.data.remaining);\r\n            }else {\r\n                setRemaining(0);\r\n            }\r\n        }\r\n    }, [data, isLoading]);\r\n\r\n\r\n    const more = () => {\r\n        // totalRequest.current = requests.length;\r\n        if (remaining > 0) {\r\n            setOffset(prev => prev + 6);\r\n        }\r\n    }\r\n\r\n     // function\r\n     const closeModal = () => {\r\n        setShowModal(false);\r\n    }\r\n\r\n    return (\r\n        <div className=\"w-full h-auto bg-white rounded px-5 pt-6 flex flex-col\">\r\n            <AddListingModal showModal={showModal} closeModal={closeModal} />\r\n            <div className=\"w-full h-24 flex mt-5 mb-5\">\r\n\r\n                <div className=\"flex-1 flex flex-col\">\r\n                    <h1 className=\"font-Rubik-Bold text-xl font-bold\">Requests</h1>\r\n                    <p className=\"text-xs font-Rubik_Regular\">Businesses requesting to be listed on Zoe's Database. Please verify the data before approving</p>\r\n                </div>\r\n\r\n                <div className=\"flex justify-end mt-2\">\r\n                    \r\n                    <div className=\"h-10 mr-10\">\r\n                        <button onClick={() => setShowModal(true)} className=\"bg-green-500 h-full text-white text-xs p-2 rounded\">Add Listing</button>\r\n                    </div>\r\n{/* \r\n                    <div className=\"w-32 ml-3\">\r\n                        <Select placeholder=\"Action\">\r\n                            <option>Approve All</option>\r\n                            <option>Declined All</option>\r\n                        </Select>\r\n                    </div> */}\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\" pb-10 flex-1\">\r\n                    {isLoading ?\r\n                        (<div className=\"w-full h-full flex justify-center items-centered\">\r\n                            <Spinner color=\"green.500\" size=\"lg\" />\r\n                        </div>)\r\n                        :\r\n                        (<div>\r\n                            {requests.length < 1 ?\r\n                                (<div className=\"w-full flex flex-col items-center pt-10\">\r\n                                    <img src={Empty} alt=\"empty\" width=\"250\" />\r\n                                    <h1 className=\"mt-5 font-Rubik-medium text-lg text-center\">No request found!</h1>\r\n                                </div>):\r\n                                (<div className=\"w-full grid grid-cols-3 gap-3\">\r\n                                    {requests.map((item, index) => (\r\n                                        <RequestCard item={item} key={index} />\r\n                                    ))}\r\n                                </div>)\r\n                            }\r\n                        </div>)\r\n                    }\r\n            </div>\r\n\r\n            <div className=\"w-full h-24 flex justify-center\">\r\n                {remaining > 0 && (<button onClick={more} className=\"h-10 rounded bg-green-400 px-3 text-xs text-white font-Rubik_Regular\">Load more</button>)}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Eye.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\RequestCard.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Lock.tsx",[],["264","265"],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Business.tsx",[],["266","267"],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Pages\\Settings.tsx",[],["268","269"],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\ProfileSettings.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\AcessSettings.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\SecuritySettings.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Pages\\States.tsx",["270","271","272","273"],"import React from 'react'\r\nimport { InputGroup, Input, InputLeftElement } from '@chakra-ui/react'\r\nimport { FiLock, FiSearch } from 'react-icons/fi'\r\nimport MemoryCard from '../Components/MemoryCard'\r\n\r\nexport const IconsHolder = (props) => <div className=\"flex items-center h-full \">{props.children}</div>;\r\n\r\nexport default function States() {\r\n    return (\r\n        <div className=\"w-full h-auto rounded bg-white p-8 flex flex-col\">\r\n\r\n            <div className=\"flex justify-between\">\r\n\r\n                <div className=\"flex-1 flex flex-col\">\r\n                    <h1 className=\"text-xl font-Rubik-Bold font-bold\">Bot Memory - States</h1>\r\n                    <p className=\"font-Rubik_Regular text-xs\">All the states registered in Zoe's Memory</p>\r\n                </div>\r\n\r\n                {/* <div className=\"flex-1 flex justify-end\">\r\n                <div className=\"\">\r\n                   <button className=\" px-3 h-10 rounded bg-green-400 text-xs text-white font-Rubik_Regular\">Add State</button>\r\n                </div>\r\n                </div> */}\r\n            </div>\r\n\r\n            <div className=\"w-full flex mt-5 p-5 bg-gray-100 rounded-md\">\r\n                <FiLock color=\"black\"  size={30} className=\"\"/>\r\n                <p className=\"font-Rubik_Regular text-xs ml-4\">\r\n                Zoe's Memory allows her to quickly handle requests from users. Modifying this section might cause her to malfunction, You will not be able to add any data here at this time. You can only search for data here\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"w-3/4  h-full grid grid-cols-2 gap-3 mt-10 \">\r\n                <MemoryCard type=\"Location\" />\r\n                <MemoryCard type=\"Location\" />\r\n                <MemoryCard type=\"Location\" />\r\n                <MemoryCard type=\"Location\" />\r\n                <MemoryCard type=\"Location\" />\r\n                <MemoryCard type=\"Location\" />\r\n                <MemoryCard type=\"Location\" />\r\n                <MemoryCard type=\"Location\" />\r\n                <MemoryCard type=\"Location\" />\r\n                <MemoryCard type=\"Location\" />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Pages\\ZipCode.tsx",["274","275","276","277"],"import { InputGroup, InputLeftElement, Input } from '@chakra-ui/react'\r\nimport React from 'react'\r\nimport { FiSearch, FiLock } from 'react-icons/fi'\r\nimport MemoryCard from '../Components/MemoryCard'\r\n\r\nexport const IconsHolder = (props) => <div className=\"flex items-center h-full \">{props.children}</div>;\r\n\r\nexport default function ZipCode() {\r\n    return (\r\n        <div className=\"w-full h-auto rounded bg-white p-8 flex flex-col\">\r\n\r\n        <div className=\"flex justify-between\">\r\n\r\n            <div className=\"flex-1 flex flex-col\">\r\n                <h1 className=\"text-xl font-Rubik-Bold font-bold\">Bot Memory - Zipcodes</h1>\r\n                <p className=\"font-Rubik_Regular text-xs\">All the zipcodes registered in Zoe's Memory</p>\r\n            </div>\r\n\r\n            <div className=\"flex-1 flex justify-end\">\r\n                <div className=\"\">\r\n                    <button className=\" px-3 h-10 rounded bg-green-400 text-xs text-white font-Rubik_Regular\">Add Zip Code</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"w-full flex mt-5 p-5 bg-gray-100 rounded-md\">\r\n            <FiLock color=\"black\"  size={30} className=\"\"/>\r\n            <p className=\"font-Rubik_Regular text-xs ml-4\">\r\n            Zoe's Memory allows her to quickly handle requests from users. Modifying this section might cause her to malfunction, You will not be able to add any data here at this time. You can only search for data here\r\n            </p>\r\n        </div>\r\n\r\n        <div className=\"w-3/4  h-full grid grid-cols-2 gap-3 mt-10 \">\r\n                <MemoryCard type=\"Location\" />\r\n                <MemoryCard type=\"Location\" />\r\n                <MemoryCard type=\"Location\" />\r\n                <MemoryCard type=\"Location\" />\r\n                <MemoryCard type=\"Location\" />\r\n                <MemoryCard type=\"Location\" />\r\n                <MemoryCard type=\"Location\" />\r\n                <MemoryCard type=\"Location\" />\r\n                <MemoryCard type=\"Location\" />\r\n                <MemoryCard type=\"Location\" />\r\n            </div>\r\n\r\n    </div>\r\n    )\r\n}\r\n","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Pages\\ServiceType.tsx",["278","279","280","281"],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\MemoryCard.tsx",["282","283"],"import React from 'react'\r\nimport { FiMapPin, FiTrash2, FiEdit, FiTool } from 'react-icons/fi'\r\n\r\n\r\nfunction del(id: string): void {}\r\ninterface IProps {\r\n    id?: string;\r\n    item?: string;\r\n    type: 'Service' | 'Location';\r\n    onDelete?:typeof del;\r\n}\r\n\r\nexport default function Card(props: IProps) {\r\n    return (\r\n        <div className=\"w-full mb-3 p-2 rounded bg-gray-100 h-12 flex justify-between items-center cursor-not-allowed\">\r\n            <div className=\"flex\">\r\n                {props.type === 'Service' ? <FiTool size={20} color=\"black\" />:<FiMapPin size={20} color=\"black\" />}\r\n                <p className=\"text-sm font-Rubik_Regular ml-4 mt-1\">New York</p>\r\n            </div>\r\n\r\n            <div className=\"flex\">\r\n                {/* <FiEdit size={20} color=\"grey\" className=\"mr-5\" /> */}\r\n                {/* <FiTrash2 size={20} color=\"grey\" /> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Hooks\\useNetwork.tsx",["284"],"import React from 'react'\r\n\r\nexport default function useNetwork() {\r\n    const [connected, setConnected] = React.useState(true);\r\n    setInterval(() => {\r\n        const checkOnlineStatus = async () => {\r\n            try {\r\n              const online = await fetch(\"my.jpg\", {method: 'GET'});\r\n              console.log(online.status);\r\n               if (online.status >= 200 && online.status < 300) {\r\n                //    setConnected(true);\r\n               }else {\r\n                // setConnected(false);\r\n               }\r\n            } catch (err) {\r\n            //   setConnected(false);\r\n              return false; // definitely offline\r\n            }\r\n          };\r\n\r\n          checkOnlineStatus();\r\n    }, 30000)\r\n    return {\r\n        connected,\r\n    }\r\n}\r\n","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\NetworkActivity.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\globals\\Loader.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Hooks\\useMakeRequest.tsx",["285"],"import React from 'react'\r\nimport { IReturnType } from '../types/ReturnType'\r\nimport { URL } from '../types/Url'\r\n\r\ninterface IOptions {\r\n    method: 'POST' | 'PUT' | 'GET' | 'DELETE',\r\n    headers?: any,\r\n}\r\n\r\nexport default function useMakeRequesr() {\r\n\r\n    // let name = 'daniel';\r\n    \r\n    const makeRequest = async(url: string, payload?: any, options?: IOptions): Promise<IReturnType> => {\r\n        try {\r\n            // check for network connctivity first\r\n            const isOnline = window.navigator.onLine;\r\n            if (isOnline) {\r\n                if (options.method === 'GET') {\r\n                    const request = await fetch(`${URL}${url}`, {\r\n                        method: options.method,\r\n                        headers: {...options.headers, 'content-type': 'application/json'},\r\n                    })\r\n                    const data = await request.json() as IReturnType;\r\n                    return data;\r\n                }else {\r\n                    const request = await fetch(`${URL}${url}`, {\r\n                        method: options.method,\r\n                        headers: {...options.headers, 'content-type': 'application/json'},\r\n                        body: JSON.stringify(payload)\r\n                    })\r\n                    const data = await request.json() as IReturnType;\r\n                    return data;\r\n                }\r\n            }else {\r\n                alert(\"There is no network Connection!\")\r\n            }\r\n        } catch (error) {\r\n            alert(\"an error occured, please try again.\")\r\n        }\r\n    }\r\n    return {\r\n        makeRequest\r\n    }\r\n}\r\n","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Contexts\\AdminDetailsContext.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Hooks\\useAdminDetails.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\types\\Url.ts",["286"],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\AddAdminModal.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\AdminsTables.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Functions\\GetListings.ts",["287"],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\Modals\\DeclineModal.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\Modals\\ApproveListing.tsx",["288"],"import React from 'react'\r\nimport { AlertDialog, AlertDialogOverlay, AlertDialogContent, Spinner } from '@chakra-ui/react'\r\nimport { FiX } from 'react-icons/fi';\r\nimport { IListing } from '../../../../types/listings';\r\nimport * as axios from 'axios';\r\nimport { useMutation } from 'react-query';\r\nimport { IReturnType } from '../../../../types/ReturnType';\r\nimport { URL } from '../../../../types/Url'\r\n\r\nconst ApproveListingDialog = (props: { isOpen: boolean, title: string, close: Function, id: string }) => {\r\n    const [loading, setLoading] = React.useState(false);\r\n    const { isOpen, title, close } = props;\r\n    const cancelRef = React.useRef();\r\n\r\n    const Mutation = useMutation(async(id: string) => {\r\n        const request = await axios.default.put(`${URL}/listings/${id}`);\r\n        return  request.data as IReturnType;\r\n    })\r\n\r\n    React.useEffect(() => {\r\n        if (Mutation.status === 'loading') {\r\n            return;\r\n        }\r\n        if (Mutation.status === 'error') {\r\n            setLoading(false);\r\n            alert(Mutation.error['response'].data.errorMessage);\r\n            Mutation.reset();\r\n            props.close();\r\n        } else if (Mutation.status === 'success') {\r\n            setLoading(false);\r\n            alert(Mutation.data.successMessage);\r\n            Mutation.reset();\r\n            props.close();\r\n        }\r\n    }, [setLoading, Mutation, props]);\r\n\r\n    const submit = async() => {\r\n        setLoading(true);\r\n        Mutation.mutate(props.id);\r\n    }\r\n\r\n    return (\r\n        <AlertDialog isCentered={false} closeOnOverlayClick={false} closeOnEsc={false}  size=\"md\" motionPreset=\"scale\" isOpen={isOpen} onClose={() => close()} leastDestructiveRef={cancelRef}>\r\n            <AlertDialogOverlay>\r\n                <AlertDialogContent className=\"rounded-lg bg-white p-4\">\r\n                    <div className=\"w-fill flex justify-end\"><FiX size={25} color=\"black\" className=\"cursor-pointer\" onClick={() => close()}/></div>\r\n                    <h1 className=\"mt-3 font-Rubik-Bold font-bold text-center text-lg\">Accept Listing</h1>\r\n                    <p className=\"text-center mt-4\">{`You're about approving a listing by the company - ${title}. Do you wish to continue`}</p>\r\n\r\n                    <div className=\"flex justify-center mt-5\">\r\n                        <button disabled={loading} onClick={submit}  className=\"px-2 h-8 rounded text-white text-xs font-Rubik_Regular bg-green-500 w-24 mr-4\">{\r\n                            loading ? <Spinner color=\"white\" size=\"md\" /> : 'Accept'\r\n                        }</button>\r\n                        <button disabled={loading} onClick={() => props.close()}  className=\"px-2 h-8 rounded text-black text-xs font-Rubik_Regular border-2 border-green-500 w-24\">Cancel</button>\r\n                    </div>\r\n                </AlertDialogContent>\r\n            </AlertDialogOverlay>\r\n        </AlertDialog>\r\n    )\r\n}\r\n\r\nexport default ApproveListingDialog;","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\Modals\\AddListingModal.tsx",["289","290","291","292","293"],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\Modals\\EditListing.tsx",["294","295","296","297"],{"ruleId":"298","replacedBy":"299"},{"ruleId":"300","replacedBy":"301"},{"ruleId":"298","replacedBy":"302"},{"ruleId":"300","replacedBy":"303"},{"ruleId":"298","replacedBy":"304"},{"ruleId":"300","replacedBy":"305"},{"ruleId":"298","replacedBy":"306"},{"ruleId":"300","replacedBy":"307"},{"ruleId":"298","replacedBy":"308"},{"ruleId":"300","replacedBy":"309"},{"ruleId":"298","replacedBy":"310"},{"ruleId":"300","replacedBy":"311"},{"ruleId":"312","severity":1,"message":"313","line":5,"column":8,"nodeType":"314","messageId":"315","endLine":5,"endColumn":23},{"ruleId":"312","severity":1,"message":"316","line":18,"column":8,"nodeType":"314","messageId":"315","endLine":18,"endColumn":16},{"ruleId":"312","severity":1,"message":"317","line":2,"column":8,"nodeType":"314","messageId":"315","endLine":2,"endColumn":19},{"ruleId":"312","severity":1,"message":"318","line":16,"column":12,"nodeType":"314","messageId":"315","endLine":16,"endColumn":21},{"ruleId":"312","severity":1,"message":"319","line":43,"column":12,"nodeType":"314","messageId":"315","endLine":43,"endColumn":22},{"ruleId":"298","replacedBy":"299"},{"ruleId":"300","replacedBy":"301"},{"ruleId":"312","severity":1,"message":"320","line":34,"column":12,"nodeType":"314","messageId":"315","endLine":34,"endColumn":20},{"ruleId":"298","replacedBy":"321"},{"ruleId":"300","replacedBy":"322"},{"ruleId":"298","replacedBy":"323"},{"ruleId":"300","replacedBy":"324"},{"ruleId":"298","replacedBy":"325"},{"ruleId":"300","replacedBy":"326"},{"ruleId":"312","severity":1,"message":"327","line":2,"column":10,"nodeType":"314","messageId":"315","endLine":2,"endColumn":20},{"ruleId":"312","severity":1,"message":"328","line":2,"column":22,"nodeType":"314","messageId":"315","endLine":2,"endColumn":27},{"ruleId":"312","severity":1,"message":"329","line":2,"column":29,"nodeType":"314","messageId":"315","endLine":2,"endColumn":45},{"ruleId":"312","severity":1,"message":"330","line":3,"column":18,"nodeType":"314","messageId":"315","endLine":3,"endColumn":26},{"ruleId":"312","severity":1,"message":"327","line":1,"column":10,"nodeType":"314","messageId":"315","endLine":1,"endColumn":20},{"ruleId":"312","severity":1,"message":"329","line":1,"column":22,"nodeType":"314","messageId":"315","endLine":1,"endColumn":38},{"ruleId":"312","severity":1,"message":"328","line":1,"column":40,"nodeType":"314","messageId":"315","endLine":1,"endColumn":45},{"ruleId":"312","severity":1,"message":"330","line":3,"column":10,"nodeType":"314","messageId":"315","endLine":3,"endColumn":18},{"ruleId":"312","severity":1,"message":"327","line":1,"column":10,"nodeType":"314","messageId":"315","endLine":1,"endColumn":20},{"ruleId":"312","severity":1,"message":"329","line":1,"column":22,"nodeType":"314","messageId":"315","endLine":1,"endColumn":38},{"ruleId":"312","severity":1,"message":"328","line":1,"column":40,"nodeType":"314","messageId":"315","endLine":1,"endColumn":45},{"ruleId":"312","severity":1,"message":"330","line":3,"column":10,"nodeType":"314","messageId":"315","endLine":3,"endColumn":18},{"ruleId":"312","severity":1,"message":"331","line":2,"column":20,"nodeType":"314","messageId":"315","endLine":2,"endColumn":28},{"ruleId":"312","severity":1,"message":"332","line":2,"column":30,"nodeType":"314","messageId":"315","endLine":2,"endColumn":36},{"ruleId":"312","severity":1,"message":"333","line":4,"column":23,"nodeType":"314","messageId":"315","endLine":4,"endColumn":35},{"ruleId":"312","severity":1,"message":"334","line":1,"column":8,"nodeType":"314","messageId":"315","endLine":1,"endColumn":13},{"ruleId":"312","severity":1,"message":"335","line":2,"column":7,"nodeType":"314","messageId":"315","endLine":2,"endColumn":11},{"ruleId":"312","severity":1,"message":"336","line":1,"column":13,"nodeType":"314","messageId":"315","endLine":1,"endColumn":18},{"ruleId":"312","severity":1,"message":"337","line":4,"column":10,"nodeType":"314","messageId":"315","endLine":4,"endColumn":18},{"ruleId":"312","severity":1,"message":"337","line":3,"column":10,"nodeType":"314","messageId":"315","endLine":3,"endColumn":18},{"ruleId":"312","severity":1,"message":"338","line":4,"column":23,"nodeType":"314","messageId":"315","endLine":4,"endColumn":31},{"ruleId":"312","severity":1,"message":"339","line":5,"column":10,"nodeType":"314","messageId":"315","endLine":5,"endColumn":21},{"ruleId":"312","severity":1,"message":"340","line":6,"column":8,"nodeType":"314","messageId":"315","endLine":6,"endColumn":13},{"ruleId":"312","severity":1,"message":"320","line":33,"column":12,"nodeType":"314","messageId":"315","endLine":33,"endColumn":20},{"ruleId":"312","severity":1,"message":"338","line":4,"column":23,"nodeType":"314","messageId":"315","endLine":4,"endColumn":31},{"ruleId":"312","severity":1,"message":"339","line":5,"column":10,"nodeType":"314","messageId":"315","endLine":5,"endColumn":21},{"ruleId":"312","severity":1,"message":"340","line":6,"column":8,"nodeType":"314","messageId":"315","endLine":6,"endColumn":13},{"ruleId":"312","severity":1,"message":"320","line":33,"column":12,"nodeType":"314","messageId":"315","endLine":33,"endColumn":20},"no-native-reassign",["341"],"no-negated-in-lhs",["342"],["341"],["342"],["341"],["342"],["341"],["342"],["341"],["342"],["341"],["342"],"@typescript-eslint/no-unused-vars","'NetworkActivity' is defined but never used.","Identifier","unusedVar","'ZipCodes' is defined but never used.","'ListingCard' is defined but never used.","'showModal' is assigned a value but never used.","'closeModal' is assigned a value but never used.","'zipcodes' is assigned a value but never used.",["341"],["342"],["341"],["342"],["341"],["342"],"'InputGroup' is defined but never used.","'Input' is defined but never used.","'InputLeftElement' is defined but never used.","'FiSearch' is defined but never used.","'FiTrash2' is defined but never used.","'FiEdit' is defined but never used.","'setConnected' is assigned a value but never used.","'React' is defined but never used.","'live' is assigned a value but never used.","'axios' is defined but never used.","'IListing' is defined but never used.","'useQuery' is defined but never used.","'makeRequest' is defined but never used.","'Empty' is defined but never used.","no-global-assign","no-unsafe-negation"]