[{"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\reportWebVitals.js":"1","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\App.tsx":"2","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\navigation\\Authentication.tsx":"3","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Pages\\Home.tsx":"4","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\index.tsx":"5","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Messanger.tsx":"6","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Zoe.tsx":"7","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Home\\Form.tsx":"8","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Envelope.tsx":"9","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Pages\\ForgotPassword.tsx":"10","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Forgotpassword\\Form.tsx":"11","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\EmailIcon.tsx":"12","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Pages\\ResetPassword.tsx":"13","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\ResetPassword\\Form.tsx":"14","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Pages\\Dashboard.tsx":"15","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\navigation\\index.tsx":"16","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Greenlogo.tsx":"17","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\Navbar.tsx":"18","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\Sidebar.tsx":"19","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Services.tsx":"20","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Dashboard.tsx":"21","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Pages\\Dasboard.tsx":"22","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Pages\\Listings.tsx":"23","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Request.tsx":"24","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Settings.tsx":"25","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Location.tsx":"26","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Help.tsx":"27","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\ListingCard.tsx":"28","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\StatCard.tsx":"29","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Pages\\Request.tsx":"30","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Eye.tsx":"31","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\RequestCard.tsx":"32","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Lock.tsx":"33","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Business.tsx":"34","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Pages\\Settings.tsx":"35","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\ProfileSettings.tsx":"36","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\AcessSettings.tsx":"37","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\SecuritySettings.tsx":"38","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Pages\\States.tsx":"39","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Pages\\ZipCode.tsx":"40","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Pages\\ServiceType.tsx":"41","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\MemoryCard.tsx":"42","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Hooks\\useNetwork.tsx":"43","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\NetworkActivity.tsx":"44","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\globals\\Loader.tsx":"45","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Hooks\\useMakeRequest.tsx":"46","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Contexts\\AdminDetailsContext.tsx":"47","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Hooks\\useAdminDetails.tsx":"48","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\types\\Url.ts":"49","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\AddAdminModal.tsx":"50","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\AdminsTables.tsx":"51","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Functions\\GetListings.ts":"52","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\Modals\\DeclineModal.tsx":"53","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\Modals\\ApproveListing.tsx":"54","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\Modals\\AddListingModal.tsx":"55","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\Modals\\EditListing.tsx":"56","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Hooks\\useRefetch.tsx":"57","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Pages\\SearchResult.tsx":"58","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Hooks\\useSearch.tsx":"59","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Functions\\getStates.ts":"60","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\LatestCard.tsx":"61"},{"size":362,"mtime":1607170071459,"results":"62","hashOfConfig":"63"},{"size":185,"mtime":1609184667487,"results":"64","hashOfConfig":"63"},{"size":715,"mtime":1608243286665,"results":"65","hashOfConfig":"63"},{"size":2019,"mtime":1608296856029,"results":"66","hashOfConfig":"63"},{"size":618,"mtime":1609793837234,"results":"67","hashOfConfig":"63"},{"size":814,"mtime":1608222963801,"results":"68","hashOfConfig":"63"},{"size":3984,"mtime":1608223263285,"results":"69","hashOfConfig":"63"},{"size":5913,"mtime":1610976122170,"results":"70","hashOfConfig":"63"},{"size":998,"mtime":1608986382751,"results":"71","hashOfConfig":"63"},{"size":2039,"mtime":1608239847845,"results":"72","hashOfConfig":"63"},{"size":2760,"mtime":1608297197461,"results":"73","hashOfConfig":"63"},{"size":1539,"mtime":1608240645670,"results":"74","hashOfConfig":"63"},{"size":1916,"mtime":1608241663401,"results":"75","hashOfConfig":"63"},{"size":2366,"mtime":1608297410002,"results":"76","hashOfConfig":"63"},{"size":4166,"mtime":1612696456557,"results":"77","hashOfConfig":"63"},{"size":815,"mtime":1609794098707,"results":"78","hashOfConfig":"63"},{"size":11885,"mtime":1608244049455,"results":"79","hashOfConfig":"63"},{"size":2421,"mtime":1612708669222,"results":"80","hashOfConfig":"63"},{"size":4234,"mtime":1612184704362,"results":"81","hashOfConfig":"63"},{"size":864,"mtime":1608285364940,"results":"82","hashOfConfig":"63"},{"size":1137,"mtime":1608286696635,"results":"83","hashOfConfig":"63"},{"size":2780,"mtime":1612722308885,"results":"84","hashOfConfig":"63"},{"size":4832,"mtime":1612717186814,"results":"85","hashOfConfig":"63"},{"size":1331,"mtime":1608286004387,"results":"86","hashOfConfig":"63"},{"size":983,"mtime":1608286464803,"results":"87","hashOfConfig":"63"},{"size":1089,"mtime":1608285540671,"results":"88","hashOfConfig":"63"},{"size":749,"mtime":1608288790470,"results":"89","hashOfConfig":"63"},{"size":3524,"mtime":1612516925874,"results":"90","hashOfConfig":"63"},{"size":906,"mtime":1608300179082,"results":"91","hashOfConfig":"63"},{"size":4956,"mtime":1612717155148,"results":"92","hashOfConfig":"63"},{"size":754,"mtime":1608986870057,"results":"93","hashOfConfig":"63"},{"size":2519,"mtime":1612516485981,"results":"94","hashOfConfig":"63"},{"size":812,"mtime":1608986795789,"results":"95","hashOfConfig":"63"},{"size":711,"mtime":1608285692074,"results":"96","hashOfConfig":"63"},{"size":1967,"mtime":1610972423385,"results":"97","hashOfConfig":"63"},{"size":4701,"mtime":1612518891624,"results":"98","hashOfConfig":"63"},{"size":2168,"mtime":1612517054181,"results":"99","hashOfConfig":"63"},{"size":4426,"mtime":1611771392762,"results":"100","hashOfConfig":"63"},{"size":2697,"mtime":1612714724121,"results":"101","hashOfConfig":"63"},{"size":2096,"mtime":1611822908559,"results":"102","hashOfConfig":"63"},{"size":2590,"mtime":1612715474535,"results":"103","hashOfConfig":"63"},{"size":938,"mtime":1612714332791,"results":"104","hashOfConfig":"63"},{"size":770,"mtime":1609314476861,"results":"105","hashOfConfig":"63"},{"size":1366,"mtime":1609232955423,"results":"106","hashOfConfig":"63"},{"size":860,"mtime":1609202918845,"results":"107","hashOfConfig":"63"},{"size":1613,"mtime":1609702569817,"results":"108","hashOfConfig":"63"},{"size":1189,"mtime":1612709997470,"results":"109","hashOfConfig":"63"},{"size":660,"mtime":1612710059574,"results":"110","hashOfConfig":"63"},{"size":105,"mtime":1612722358482,"results":"111","hashOfConfig":"63"},{"size":7137,"mtime":1611855239815,"results":"112","hashOfConfig":"63"},{"size":6790,"mtime":1612517715212,"results":"113","hashOfConfig":"63"},{"size":1353,"mtime":1612720033852,"results":"114","hashOfConfig":"63"},{"size":3040,"mtime":1612260891964,"results":"115","hashOfConfig":"63"},{"size":3082,"mtime":1612260753779,"results":"116","hashOfConfig":"63"},{"size":11842,"mtime":1612188276674,"results":"117","hashOfConfig":"63"},{"size":12116,"mtime":1612260974300,"results":"118","hashOfConfig":"63"},{"size":385,"mtime":1612260411404,"results":"119","hashOfConfig":"63"},{"size":1634,"mtime":1612710324699,"results":"120","hashOfConfig":"63"},{"size":442,"mtime":1612710644971,"results":"121","hashOfConfig":"63"},{"size":418,"mtime":1612712947221,"results":"122","hashOfConfig":"63"},{"size":1232,"mtime":1612721946010,"results":"123","hashOfConfig":"63"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},"1nsem7i",{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"129"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"212"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"220"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"149"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"144"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"129"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\reportWebVitals.js",[],["261","262"],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\App.tsx",[],["263","264"],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\navigation\\Authentication.tsx",[],["265","266"],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Pages\\Home.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\index.tsx",[],["267","268"],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Messanger.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Zoe.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Home\\Form.tsx",[],["269","270"],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Envelope.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Pages\\ForgotPassword.tsx",[],["271","272"],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Forgotpassword\\Form.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\EmailIcon.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Pages\\ResetPassword.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\ResetPassword\\Form.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Pages\\Dashboard.tsx",["273","274"],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\navigation\\index.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Greenlogo.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\Navbar.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\Sidebar.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Services.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Dashboard.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Pages\\Dasboard.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Pages\\Listings.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Request.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Settings.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Location.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Help.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\ListingCard.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\StatCard.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Pages\\Request.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Eye.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\RequestCard.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Lock.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\assets\\icons\\Business.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Pages\\Settings.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\ProfileSettings.tsx",["275"],"import React from 'react'\r\nimport { FiCamera } from 'react-icons/fi'\r\nimport { Input, Spinner } from '@chakra-ui/react'\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport useDetails from '../../../Hooks/useAdminDetails';\r\nimport { useMutation } from 'react-query';\r\nimport * as axios from 'axios'\r\nimport { URL } from '../../../types/Url'\r\nimport { IReturnType } from '../../../types/ReturnType';\r\nimport { IAdmintype } from '../../../types/Admin';\r\n\r\n\r\nconst validationSchema = yup.object({\r\n    firstname: yup.string().min(3, 'minimium of 3 characters'),\r\n    lastname: yup.string().min(3, 'minimium of 3 characters'),\r\n});\r\n\r\nexport default function ProfileSettings() {\r\n    const { email, firstname, lastname, id, setFirstname, setLastname } = useDetails();\r\n    const Mutation = useMutation(async(values: {firstname: string, lastname: string}) => {\r\n        const request = await axios.default.put(`${URL}/admin/${id}`, values, {headers: {'content-type': 'application/json'}});\r\n        return  request.data as IReturnType;\r\n    })\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            firstname,\r\n            lastname,\r\n        },\r\n        onSubmit: () => null,\r\n        validationSchema\r\n    });\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (Mutation.status === 'loading') {\r\n            return;\r\n        }\r\n        if (Mutation.status === 'error') {\r\n            Mutation.reset();\r\n            alert(Mutation.error['response'].data.errorMessage);\r\n        } else if (Mutation.status === 'success') {\r\n            // update the details\r\n            alert(Mutation.data.successMessage);\r\n            makeRequest();\r\n        }\r\n    });\r\n\r\n    const submit = () => {\r\n        if (!formik.isValid) {\r\n            alert('Please filling the form correctly.');\r\n        }else {\r\n            Mutation.mutate(formik.values);\r\n        }\r\n    }\r\n\r\n    const makeRequest = async() => {\r\n        try {\r\n            const request = await fetch(`${URL}/admin/${id}`);\r\n            const result = await request.json() as IReturnType;\r\n            const data = result.data as IAdmintype;\r\n            setFirstname(data.firstname);\r\n            setLastname(data.lastname);\r\n            sessionStorage.setItem('firstname', firstname);\r\n            sessionStorage.setItem('lastname', lastname);\r\n            Mutation.reset();\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n\r\n    const getintials = (): string => {\r\n        const first = firstname[0];\r\n        const last = lastname[0];\r\n        const initails = `${first}${last}`;\r\n        return initails.toUpperCase();\r\n    }\r\n\r\n    return (\r\n        <div className=\"w-full h-full flex flex-col\">\r\n            <div>\r\n                <div className=\"w-20 h-20 rounded-full bg-gray-100 flex justify-center items-center hover:bg-gray-300 cursor-pointer transition duration-500 ease-in-out hover:scale-125\">\r\n                    <p className=\"font-Rubik_Bold text-xl text-green-500\">{getintials()}</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"w-full flex mt-10\">\r\n                <div className=\"flex-1 flex flex-col\">\r\n                    <p className=\"text-xs font-Rubik_Regular\">First Name</p>\r\n                    <Input variant=\"filled\" name=\"firstname\" value={formik.values.firstname} onChange={formik.handleChange} onBlur={formik.handleBlur} onFocus={() => formik.setFieldTouched('firstname', true, true)} />\r\n                </div>\r\n\r\n                <div className=\"w-10\"></div>\r\n\r\n                <div className=\"flex-1 flex flex-col\">\r\n                    <p className=\"text-xs font-Rubik_Regular\">Last Name</p>\r\n                    <Input variant=\"filled\" name=\"lastname\" value={formik.values.lastname} onChange={formik.handleChange} onBlur={formik.handleBlur} onFocus={() => formik.setFieldTouched('lastname', true, true)} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"w-2/4 flex mt-10 pr-6\">\r\n                <div className=\"flex-1 flex flex-col\">\r\n                    <p className=\"text-xs font-Rubik_Regular\">Email</p>\r\n                    <Input variant=\"filled\" value={email} disabled={true} />\r\n                    <p className=\"text-xs text-red-500\">You cannot change this email Address</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"w-full flex justify-end mt-10\">\r\n                <button disabled={Mutation.isLoading} onClick={submit} className=\"w-32 h-12 rounded bg-green-500 text-white text-xs font-Rubik-Regular\">\r\n                    {Mutation.isLoading ? <Spinner color=\"white\" size=\"md\" /> : 'Update Profile'}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\AcessSettings.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\SecuritySettings.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Pages\\States.tsx",["276","277","278","279","280"],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Pages\\ZipCode.tsx",["281","282","283","284"],"import { InputGroup, InputLeftElement, Input } from '@chakra-ui/react'\r\nimport React from 'react'\r\nimport { FiSearch, FiLock } from 'react-icons/fi'\r\nimport MemoryCard from '../Components/MemoryCard'\r\n\r\nexport const IconsHolder = (props) => <div className=\"flex items-center h-full \">{props.children}</div>;\r\n\r\nexport default function ZipCode() {\r\n    return (\r\n        <div className=\"w-full h-auto rounded bg-white p-8 flex flex-col\">\r\n\r\n        <div className=\"flex justify-between\">\r\n\r\n            <div className=\"flex-1 flex flex-col\">\r\n                <h1 className=\"text-xl font-Rubik-Bold font-bold\">Bot Memory - Zipcodes</h1>\r\n                <p className=\"font-Rubik_Regular text-xs\">All the zipcodes registered in Zoe's Memory</p>\r\n            </div>\r\n\r\n            <div className=\"flex-1 flex justify-end\">\r\n                <div className=\"\">\r\n                    <button className=\" px-3 h-10 rounded bg-green-400 text-xs text-white font-Rubik_Regular\">Add Zip Code</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"w-full flex mt-5 p-5 bg-gray-100 rounded-md\">\r\n            <FiLock color=\"black\"  size={30} className=\"\"/>\r\n            <p className=\"font-Rubik_Regular text-xs ml-4\">\r\n            Zoe's Memory allows her to quickly handle requests from users. Modifying this section might cause her to malfunction, You will not be able to add any data here at this time. You can only search for data here\r\n            </p>\r\n        </div>\r\n\r\n        <div className=\"w-3/4  h-full grid grid-cols-2 gap-3 mt-10 \">\r\n                <MemoryCard type=\"Location\" />\r\n                <MemoryCard type=\"Location\" />\r\n                <MemoryCard type=\"Location\" />\r\n                <MemoryCard type=\"Location\" />\r\n                <MemoryCard type=\"Location\" />\r\n                <MemoryCard type=\"Location\" />\r\n                <MemoryCard type=\"Location\" />\r\n                <MemoryCard type=\"Location\" />\r\n                <MemoryCard type=\"Location\" />\r\n                <MemoryCard type=\"Location\" />\r\n            </div>\r\n\r\n    </div>\r\n    )\r\n}\r\n",["285","286"],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Pages\\ServiceType.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\MemoryCard.tsx",["287","288"],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Hooks\\useNetwork.tsx",["289"],"import React from 'react'\r\n\r\nexport default function useNetwork() {\r\n    const [connected, setConnected] = React.useState(true);\r\n    setInterval(() => {\r\n        const checkOnlineStatus = async () => {\r\n            try {\r\n              const online = await fetch(\"my.jpg\", {method: 'GET'});\r\n              console.log(online.status);\r\n               if (online.status >= 200 && online.status < 300) {\r\n                //    setConnected(true);\r\n               }else {\r\n                // setConnected(false);\r\n               }\r\n            } catch (err) {\r\n            //   setConnected(false);\r\n              return false; // definitely offline\r\n            }\r\n          };\r\n\r\n          checkOnlineStatus();\r\n    }, 30000)\r\n    return {\r\n        connected,\r\n    }\r\n}\r\n",["290","291"],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\NetworkActivity.tsx",[],["292","293"],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\globals\\Loader.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Hooks\\useMakeRequest.tsx",["294"],"import React from 'react'\r\nimport { IReturnType } from '../types/ReturnType'\r\nimport { URL } from '../types/Url'\r\n\r\ninterface IOptions {\r\n    method: 'POST' | 'PUT' | 'GET' | 'DELETE',\r\n    headers?: any,\r\n}\r\n\r\nexport default function useMakeRequesr() {\r\n\r\n    // let name = 'daniel';\r\n    \r\n    const makeRequest = async(url: string, payload?: any, options?: IOptions): Promise<IReturnType> => {\r\n        try {\r\n            // check for network connctivity first\r\n            const isOnline = window.navigator.onLine;\r\n            if (isOnline) {\r\n                if (options.method === 'GET') {\r\n                    const request = await fetch(`${URL}${url}`, {\r\n                        method: options.method,\r\n                        headers: {...options.headers, 'content-type': 'application/json'},\r\n                    })\r\n                    const data = await request.json() as IReturnType;\r\n                    return data;\r\n                }else {\r\n                    const request = await fetch(`${URL}${url}`, {\r\n                        method: options.method,\r\n                        headers: {...options.headers, 'content-type': 'application/json'},\r\n                        body: JSON.stringify(payload)\r\n                    })\r\n                    const data = await request.json() as IReturnType;\r\n                    return data;\r\n                }\r\n            }else {\r\n                alert(\"There is no network Connection!\")\r\n            }\r\n        } catch (error) {\r\n            alert(\"an error occured, please try again.\")\r\n        }\r\n    }\r\n    return {\r\n        makeRequest\r\n    }\r\n}\r\n","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Contexts\\AdminDetailsContext.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Hooks\\useAdminDetails.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\types\\Url.ts",["295"],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\AddAdminModal.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\AdminsTables.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Functions\\GetListings.ts",["296"],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\Modals\\DeclineModal.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\Modals\\ApproveListing.tsx",["297"],"import React from 'react'\r\nimport { AlertDialog, AlertDialogOverlay, AlertDialogContent, Spinner } from '@chakra-ui/react'\r\nimport { FiX } from 'react-icons/fi';\r\nimport { IListing } from '../../../../types/listings';\r\nimport * as axios from 'axios';\r\nimport { useMutation } from 'react-query';\r\nimport { IReturnType } from '../../../../types/ReturnType';\r\nimport { URL } from '../../../../types/Url'\r\nimport useRefch from '../../../../Hooks/useRefetch'\r\n\r\nconst ApproveListingDialog = (props: { isOpen: boolean, title: string, close: Function, id: string }) => {\r\n    const [loading, setLoading] = React.useState(false);\r\n    const { isOpen, title, close } = props;\r\n    const cancelRef = React.useRef();\r\n    const {handleRefetch} = useRefch();\r\n\r\n    const Mutation = useMutation(async(id: string) => {\r\n        const request = await axios.default.put(`${URL}/listings/${id}`);\r\n        return  request.data as IReturnType;\r\n    })\r\n\r\n    React.useEffect(() => {\r\n        if (Mutation.status === 'loading') {\r\n            return;\r\n        }\r\n        if (Mutation.status === 'error') {\r\n            setLoading(false);\r\n            alert(Mutation.error['response'].data.errorMessage);\r\n            Mutation.reset();\r\n            props.close();\r\n        } else if (Mutation.status === 'success') {\r\n            setLoading(false);\r\n            alert(Mutation.data.successMessage);\r\n            Mutation.reset();\r\n            handleRefetch();\r\n            props.close();\r\n        }\r\n    }, [setLoading, Mutation, props, handleRefetch]);\r\n\r\n    const submit = async() => {\r\n        setLoading(true);\r\n        Mutation.mutate(props.id);\r\n    }\r\n\r\n    return (\r\n        <AlertDialog isCentered={false} closeOnOverlayClick={false} closeOnEsc={false}  size=\"md\" motionPreset=\"scale\" isOpen={isOpen} onClose={() => close()} leastDestructiveRef={cancelRef}>\r\n            <AlertDialogOverlay>\r\n                <AlertDialogContent className=\"rounded-lg bg-white p-4\">\r\n                    <div className=\"w-fill flex justify-end\"><FiX size={25} color=\"black\" className=\"cursor-pointer\" onClick={() => close()}/></div>\r\n                    <h1 className=\"mt-3 font-Rubik-Bold font-bold text-center text-lg\">Accept Listing</h1>\r\n                    <p className=\"text-center mt-4\">{`You're about approving a listing by the company - ${title}. Do you wish to continue`}</p>\r\n\r\n                    <div className=\"flex justify-center mt-5\">\r\n                        <button disabled={loading} onClick={submit}  className=\"px-2 h-8 rounded text-white text-xs font-Rubik_Regular bg-green-500 w-24 mr-4\">{\r\n                            loading ? <Spinner color=\"white\" size=\"md\" /> : 'Accept'\r\n                        }</button>\r\n                        <button disabled={loading} onClick={() => props.close()}  className=\"px-2 h-8 rounded text-black text-xs font-Rubik_Regular border-2 border-green-500 w-24\">Cancel</button>\r\n                    </div>\r\n                </AlertDialogContent>\r\n            </AlertDialogOverlay>\r\n        </AlertDialog>\r\n    )\r\n}\r\n\r\nexport default ApproveListingDialog;","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\Modals\\AddListingModal.tsx",["298","299","300","301","302"],"import React from 'react'\r\nimport { Spinner, Input, Modal, ModalContent, ModalOverlay, Select, InputGroup, InputLeftAddon  } from '@chakra-ui/react'\r\nimport { IListing } from '../../../../types/listings';\r\nimport { useMutation, useQuery, useQueries } from 'react-query';\r\nimport { makeRequest } from '../../Functions/GetListings';\r\nimport Empty  from '../../../assets/icons/notfound.svg';\r\nimport { FiX } from 'react-icons/fi';\r\nimport { IReturnType } from '../../../../types/ReturnType';\r\nimport { URL } from '../../../../types/Url'\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport * as axios from 'axios';\r\n\r\n\r\n// validation schema\r\nconst validationSchema = yup.object({\r\n    state: yup.string().required('This field is required'),\r\n    address: yup.string().required('This field is required'),\r\n    zip_code: yup.string().required('This field is required'),\r\n    service_type: yup.string().required('This field is required'),\r\n    email: yup.string().email('invalid email').required('This field is required'),\r\n    phone: yup.string().required('This field is required'),\r\n    website: yup.string(),\r\n    business_name: yup.string().required('This field is required'),\r\n\r\n})\r\n\r\n\r\nconst AddListingModal = (props: {showModal: boolean, closeModal: Function}) => {\r\n    const { showModal, closeModal } = props;\r\n    const [services, setServices] = React.useState([]);\r\n    const [states, setStates] = React.useState([]);\r\n    const [zipcodes, setZipcodes] = React.useState([]);\r\n\r\n    // formik\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            state: '',\r\n            address: '',\r\n            zip_code: '',\r\n            service_type: '',\r\n            email: '',\r\n            phone: '',\r\n            website: '',\r\n            business_name: '',\r\n        },\r\n        onSubmit: () => null,\r\n        validationSchema\r\n    });\r\n\r\n    const Mutation = useMutation(async(listing: any) => {\r\n        const request = await axios.default.post(`${URL}/listings/add`, listing, {headers: { 'content-type': 'application/json' }});\r\n        return  request.data as IReturnType;\r\n    })\r\n\r\n    const query = useQueries([\r\n        { queryKey: 'services', queryFn: async () => {\r\n                const request = await fetch(`${URL}/servicetype`);\r\n                const result = await request.json() as IReturnType;\r\n                if (!request.ok) {\r\n                    throw new Error('An error occured ');\r\n                }\r\n                return result;\r\n            }\r\n        },\r\n        {\r\n            queryKey: 'states', queryFn: async () => {\r\n                const request = await fetch(`${URL}/states`);\r\n                const result = await request.json() as IReturnType;\r\n                if (!request.ok) {\r\n                    throw new Error('An error occured ');\r\n                }\r\n                return result;\r\n            }\r\n        },\r\n        {\r\n            queryKey: 'zipcode', queryFn: async () => {\r\n                const request = await fetch(`${URL}/zipcode`);\r\n                const result = await request.json() as IReturnType;\r\n                if (!request.ok) {\r\n                    throw new Error('An error occured ');\r\n                }\r\n                return result;\r\n            }\r\n        },\r\n    ])\r\n\r\n    React.useEffect(() => {\r\n        \r\n        if (query[0].data !== undefined) {\r\n            setServices([ ...query[0].data['data']])\r\n        }\r\n        if (query[1].data !== undefined) {\r\n            setStates([...query[1].data['data']]);\r\n        }\r\n        if (query[2].data !== undefined) {\r\n            setZipcodes([...query[2].data['data']]);\r\n        }\r\n        \r\n    }, [query])\r\n\r\n    React.useEffect(() => {\r\n        if (Mutation.status === 'loading') {\r\n            return;\r\n        }\r\n        if (Mutation.status === 'error') {\r\n            clearFields();\r\n            alert(Mutation.error['response'].data.errorMessage);\r\n            Mutation.reset();\r\n        } else if (Mutation.status === 'success') {\r\n            clearFields();\r\n            alert(Mutation.data.successMessage);\r\n            Mutation.reset();\r\n        }\r\n    });\r\n\r\n    const submit = async() => {\r\n        if (!formik.dirty) {\r\n            alert(\"you have to flll the form to continue\");\r\n        } else if (!formik.isValid) {\r\n            alert(\"Please fill in the form correctly\")\r\n        } else {\r\n            Mutation.mutate(formik.values);\r\n        }\r\n    }\r\n\r\n    const clearFields = () => {\r\n        formik.resetForm();\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={showModal} closeOnEsc={false} closeOnOverlayClick={false} isCentered={true} size=\"xl\" motionPreset=\"scale\" onClose={() => closeModal()}>\r\n            <ModalOverlay />\r\n            <ModalContent className=\"p-6 rounded-md\">\r\n                <div className=\"w-full flex justify-end\"><FiX size={24} color=\"black\" onClick={() => closeModal()} /></div>\r\n                <h1 className=\"font-Rubik-Bold font-bold text-lg mt-4\">Add Listing</h1>\r\n\r\n                <div className=\"mt-4 flex justify-between w-full\">\r\n                    <div className=\"flex flex-col flex-1 mr-3\">\r\n                        <p className=\"text-sm font-bold font-Rubik-Regular\">Business name</p>\r\n                        <Input type=\"text\" name=\"business_name\"  value={formik.values.business_name} onChange={formik.handleChange} \r\n                        onBlur={formik.handleBlur} onFocus={() => formik.setFieldTouched('business_name', true, true)} variant=\"filled\" className=\"mt-3\" />\r\n                        {formik.touched.business_name && formik.errors.business_name && (<p className=\"text-sm font-bold font-Rubik-Regular text-red-400\">{formik.errors.business_name}</p>)}\r\n                    </div>\r\n\r\n                    <div className=\"flex flex-col flex-1\">\r\n                        <p className=\"text-sm font-bold font-Rubik-Regular\">State</p>\r\n                        <Select variant=\"filled\"  placeholder=\"States\" className=\"mt-3\" name=\"state\"  value={formik.values.state} onChange={formik.handleChange} \r\n                        onBlur={formik.handleBlur} onFocus={() => formik.setFieldTouched('state', true, true)}>\r\n                            {\r\n                                states.map((item, index) => (\r\n                                    <option key={index} value={item['name']}>{item.name}</option>\r\n                                ))\r\n                            }\r\n                        </Select>\r\n                        {formik.touched.state && formik.errors.state && (<p className=\"text-sm font-bold font-Rubik-Regular text-red-400\">{formik.errors.state}</p>)}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"mt-4 flex justify-between w-full\">\r\n                    <div className=\"flex flex-col flex-1 mr-3\">\r\n                        <p className=\"text-sm font-bold font-Rubik-Regular\">Zipcode</p>\r\n\r\n                        <Input type=\"text\" name=\"zip_code\"  value={formik.values.zip_code} onChange={formik.handleChange} \r\n                        onBlur={formik.handleBlur} onFocus={() => formik.setFieldTouched('zip_code', true, true)} variant=\"filled\" className=\"mt-3\" />\r\n\r\n                        {formik.touched.zip_code && formik.errors.zip_code && (<p className=\"text-sm font-bold font-Rubik-Regular text-red-400\">{formik.errors.zip_code}</p>)}\r\n                    </div>\r\n\r\n                    <div className=\"flex flex-col flex-1\">\r\n                        <p className=\"text-sm font-bold font-Rubik-Regular\">Phone number</p>\r\n                        <Input type=\"text\" variant=\"filled\" className=\"mt-3\" name=\"phone\"  value={formik.values.phone} onChange={formik.handleChange} \r\n                        onBlur={formik.handleBlur} onFocus={() => formik.setFieldTouched('phone', true, true)} />\r\n                        {formik.touched.phone && formik.errors.phone && (<p className=\"text-sm font-bold font-Rubik-Regular text-red-400\">{formik.errors.phone}</p>)}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"mt-4 flex justify-between w-full\">\r\n                    <div className=\"flex flex-col flex-1 mr-3\">\r\n                        <p className=\"text-sm font-bold font-Rubik-Regular\">Email Address</p>\r\n                        <Input type=\"text\" variant=\"filled\" className=\"mt-3\" name=\"email\"  value={formik.values.email} onChange={formik.handleChange} \r\n                        onBlur={formik.handleBlur} onFocus={() => formik.setFieldTouched('email', true, true)}/>\r\n                        {formik.touched.email && formik.errors.email && (<p className=\"text-sm font-bold font-Rubik-Regular text-red-400\">{formik.errors.email}</p>)}\r\n                    </div>\r\n\r\n                    <div className=\"flex flex-col flex-1\">\r\n                        <p className=\"text-sm font-bold font-Rubik-Regular\">Website</p>\r\n                        <InputGroup className=\"mt-3\">\r\n                            <InputLeftAddon children={<p>www.</p>} />\r\n                            <Input type=\"text\" variant=\"filled\" className=\"mt-0\" name=\"website\"  value={formik.values.website} onChange={formik.handleChange} \r\n                            onBlur={formik.handleBlur} onFocus={() => formik.setFieldTouched('website', true, true)}/>\r\n                            </InputGroup>\r\n                        {formik.touched.website && formik.errors.website && (<p className=\"text-sm font-bold font-Rubik-Regular text-red-400\">{formik.errors.website}</p>)}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"mt-4 flex justify-between w-full\">\r\n                    <div className=\"flex flex-col flex-1 mr-3\">\r\n                        <p className=\"text-sm font-bold font-Rubik-Regular\">Service Type</p>\r\n                        <Select variant=\"filled\" placeholder=\"Service Type\" className=\"mt-3\" name=\"service_type\"  value={formik.values.service_type} onChange={formik.handleChange} \r\n                        onBlur={formik.handleBlur} onFocus={() => formik.setFieldTouched('service_type', true, true)}>\r\n                            {\r\n                                services.map((item, index) => (\r\n                                    <option key={index} value={item['name']}>{item.name}</option>\r\n                                ))\r\n                            }\r\n                        </Select>\r\n                        {formik.touched.service_type && formik.errors.service_type && (<p className=\"text-sm font-bold font-Rubik-Regular text-red-400\">{formik.errors.service_type}</p>)}\r\n                    </div>\r\n\r\n                    <div className=\"flex flex-col flex-1 mr-3\">\r\n                        <p className=\"text-sm font-bold font-Rubik-Regular\">Address</p>\r\n                        <Input type=\"text\" variant=\"filled\" className=\"mt-3\" name=\"address\"  value={formik.values.address} onChange={formik.handleChange} \r\n                        onBlur={formik.handleBlur} onFocus={() => formik.setFieldTouched('address', true, true)}/>\r\n                        {formik.touched.address && formik.errors.address && (<p className=\"text-sm font-bold font-Rubik-Regular text-red-400\">{formik.errors.address}</p>)}\r\n                    </div>\r\n\r\n                   \r\n                </div>\r\n\r\n                <div className=\"flex justify-end flex-1 mt-6\">\r\n                        <button onClick={submit} className=\"px-4 rounded bg-green-500 text-white w-24 text-xs h-10 mt-8\">\r\n                            {\r\n                                Mutation.status === 'loading' ?\r\n                                <Spinner color=\"white\" size='md' /> :\r\n                                'Submit'\r\n                            }\r\n                        </button>\r\n                </div>\r\n\r\n            </ModalContent>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default AddListingModal;","C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\Modals\\EditListing.tsx",["303","304","305","306"],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Hooks\\useRefetch.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Pages\\SearchResult.tsx",["307","308"],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Hooks\\useSearch.tsx",[],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Functions\\getStates.ts",["309"],"C:\\Users\\danie\\Documents\\projects\\bot\\bot-frontend\\src\\Components\\Dashboard\\Components\\LatestCard.tsx",[],{"ruleId":"310","replacedBy":"311"},{"ruleId":"312","replacedBy":"313"},{"ruleId":"310","replacedBy":"314"},{"ruleId":"312","replacedBy":"315"},{"ruleId":"310","replacedBy":"311"},{"ruleId":"312","replacedBy":"313"},{"ruleId":"310","replacedBy":"316"},{"ruleId":"312","replacedBy":"317"},{"ruleId":"310","replacedBy":"318"},{"ruleId":"312","replacedBy":"319"},{"ruleId":"310","replacedBy":"320"},{"ruleId":"312","replacedBy":"321"},{"ruleId":"322","severity":1,"message":"323","line":5,"column":8,"nodeType":"324","messageId":"325","endLine":5,"endColumn":23},{"ruleId":"322","severity":1,"message":"326","line":18,"column":8,"nodeType":"324","messageId":"325","endLine":18,"endColumn":16},{"ruleId":"322","severity":1,"message":"327","line":2,"column":10,"nodeType":"324","messageId":"325","endLine":2,"endColumn":18},{"ruleId":"322","severity":1,"message":"328","line":2,"column":10,"nodeType":"324","messageId":"325","endLine":2,"endColumn":20},{"ruleId":"322","severity":1,"message":"329","line":2,"column":22,"nodeType":"324","messageId":"325","endLine":2,"endColumn":27},{"ruleId":"322","severity":1,"message":"330","line":2,"column":29,"nodeType":"324","messageId":"325","endLine":2,"endColumn":45},{"ruleId":"322","severity":1,"message":"331","line":3,"column":18,"nodeType":"324","messageId":"325","endLine":3,"endColumn":26},{"ruleId":"322","severity":1,"message":"332","line":13,"column":29,"nodeType":"324","messageId":"325","endLine":13,"endColumn":36},{"ruleId":"322","severity":1,"message":"328","line":1,"column":10,"nodeType":"324","messageId":"325","endLine":1,"endColumn":20},{"ruleId":"322","severity":1,"message":"330","line":1,"column":22,"nodeType":"324","messageId":"325","endLine":1,"endColumn":38},{"ruleId":"322","severity":1,"message":"329","line":1,"column":40,"nodeType":"324","messageId":"325","endLine":1,"endColumn":45},{"ruleId":"322","severity":1,"message":"331","line":3,"column":10,"nodeType":"324","messageId":"325","endLine":3,"endColumn":18},{"ruleId":"310","replacedBy":"333"},{"ruleId":"312","replacedBy":"334"},{"ruleId":"322","severity":1,"message":"335","line":2,"column":20,"nodeType":"324","messageId":"325","endLine":2,"endColumn":28},{"ruleId":"322","severity":1,"message":"336","line":2,"column":30,"nodeType":"324","messageId":"325","endLine":2,"endColumn":36},{"ruleId":"322","severity":1,"message":"337","line":4,"column":23,"nodeType":"324","messageId":"325","endLine":4,"endColumn":35},{"ruleId":"310","replacedBy":"338"},{"ruleId":"312","replacedBy":"339"},{"ruleId":"310","replacedBy":"340"},{"ruleId":"312","replacedBy":"341"},{"ruleId":"322","severity":1,"message":"342","line":1,"column":8,"nodeType":"324","messageId":"325","endLine":1,"endColumn":13},{"ruleId":"322","severity":1,"message":"343","line":1,"column":7,"nodeType":"324","messageId":"325","endLine":1,"endColumn":12},{"ruleId":"322","severity":1,"message":"344","line":1,"column":13,"nodeType":"324","messageId":"325","endLine":1,"endColumn":18},{"ruleId":"322","severity":1,"message":"345","line":4,"column":10,"nodeType":"324","messageId":"325","endLine":4,"endColumn":18},{"ruleId":"322","severity":1,"message":"345","line":3,"column":10,"nodeType":"324","messageId":"325","endLine":3,"endColumn":18},{"ruleId":"322","severity":1,"message":"346","line":4,"column":23,"nodeType":"324","messageId":"325","endLine":4,"endColumn":31},{"ruleId":"322","severity":1,"message":"347","line":5,"column":10,"nodeType":"324","messageId":"325","endLine":5,"endColumn":21},{"ruleId":"322","severity":1,"message":"348","line":6,"column":8,"nodeType":"324","messageId":"325","endLine":6,"endColumn":13},{"ruleId":"322","severity":1,"message":"349","line":33,"column":12,"nodeType":"324","messageId":"325","endLine":33,"endColumn":20},{"ruleId":"322","severity":1,"message":"346","line":4,"column":23,"nodeType":"324","messageId":"325","endLine":4,"endColumn":31},{"ruleId":"322","severity":1,"message":"347","line":5,"column":10,"nodeType":"324","messageId":"325","endLine":5,"endColumn":21},{"ruleId":"322","severity":1,"message":"348","line":6,"column":8,"nodeType":"324","messageId":"325","endLine":6,"endColumn":13},{"ruleId":"322","severity":1,"message":"349","line":34,"column":12,"nodeType":"324","messageId":"325","endLine":34,"endColumn":20},{"ruleId":"322","severity":1,"message":"350","line":19,"column":12,"nodeType":"324","messageId":"325","endLine":19,"endColumn":19},{"ruleId":"322","severity":1,"message":"351","line":19,"column":21,"nodeType":"324","messageId":"325","endLine":19,"endColumn":31},{"ruleId":"322","severity":1,"message":"344","line":1,"column":13,"nodeType":"324","messageId":"325","endLine":1,"endColumn":18},"no-native-reassign",["352"],"no-negated-in-lhs",["353"],["352"],["353"],["352"],["353"],["352"],["353"],["352"],["353"],"@typescript-eslint/no-unused-vars","'NetworkActivity' is defined but never used.","Identifier","unusedVar","'ZipCodes' is defined but never used.","'FiCamera' is defined but never used.","'InputGroup' is defined but never used.","'Input' is defined but never used.","'InputLeftElement' is defined but never used.","'FiSearch' is defined but never used.","'refetch' is assigned a value but never used.",["352"],["353"],"'FiTrash2' is defined but never used.","'FiEdit' is defined but never used.","'setConnected' is assigned a value but never used.",["352"],["353"],["352"],["353"],"'React' is defined but never used.","'local' is assigned a value but never used.","'axios' is defined but never used.","'IListing' is defined but never used.","'useQuery' is defined but never used.","'makeRequest' is defined but never used.","'Empty' is defined but never used.","'zipcodes' is assigned a value but never used.","'results' is assigned a value but never used.","'setResults' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]